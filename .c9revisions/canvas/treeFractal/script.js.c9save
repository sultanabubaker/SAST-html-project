{"ts":1345644965979,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var canvas = document.getElementById(\"canvas\");\nvar c = canvas.getContext(\"2d\");\n\nfunction drawClock() {\n    // clear the background\n    c.fillStyle = 'lightgray';\n    c.fillRect(0, 0, canvas.width, canvas.height);\n    \n    // Get the current time\n    var now = new Date(),\n        h = now.getHours(),\n        m = now.getMinutes(),\n        s = now.getSeconds(),\n        ampm = (h < 12 ? 'AM' : 'PM');\n\n    // Make the hour between 0 and 12 (not 24)\n    h = (h % 12);\n\n    // Make values like '5' into '05'\n    h = addLeadingZeroWhenNecessary(h);\n    m = addLeadingZeroWhenNecessary(m);\n    s = addLeadingZeroWhenNecessary(s);\n    \n    // Assemble the text\n    var clockText = h + ':' + m + ':' + s + ' ' + ampm,\n        x = 10,\n        y = 60;\n    \n    // This green color was picked\n    // using http://jscolor.com/\n    c.fillStyle = '#00DB84';\n    \n    // Draw the text\n    c.font = '50pt Arial';\n    c.strokeStyle = 'black';\n    c.fillText(clockText, x, y);\n    c.strokeText(clockText, x, y);\n}\n\nfunction addLeadingZeroWhenNecessary(s){\n    return (s < 10 ? '0' : '') + s;\n}\n\n// Draw the clock right away\ndrawClock();\n\n// Then draw the clock every subsequent second\nsetInterval(drawClock, 1000);"]],"start1":0,"start2":0,"length1":0,"length2":1198}]],"length":1198}
{"contributors":[],"silentsave":false,"ts":1345644991111,"patch":[[{"diffs":[[0,");\n\n"],[-1,"function drawClock() {\n    // clear the background\n    c.fillStyle = 'lightgray';\n    c.fillRect(0, 0, canvas.width, canvas.height);\n    \n    // Get the current time\n    var now = new Date(),\n        h = now.getHours(),\n        m = now.getMinutes(),\n        s = now.getSeconds(),\n        ampm = (h < 12 ? 'AM' : 'PM'"],[1,"var centerX = canvas.width / 2;\n\nvar trunkHeight = 100;\nvar branchLengthRatio = 0.75;\nvar branchAngleDifference = 0.27;\nvar branchingDepth = 10;\n\nfunction drawTree(x1, y1, x2, y2, branchLength,\n                  branchAngle, depth){\n  if(depth == 0)\n    return;\n  else{\n    c.beginPath("],[0,");\n"],[-1,"\n"],[0,"    "],[-1,"// Make the hour between 0 and 12 (not 24)\n    h = (h % 12"],[1,"c.moveTo(x1, y1);\n    c.lineTo(x2, y2);\n    c.closePath("],[0,");\n"],[-1,"\n"],[0,"    "],[-1,"// Make values like '5' into '05'\n    "],[1,"c.stroke();\n    \n    branchLengt"],[0,"h "],[1,"*"],[0,"= "],[-1,"addLeadingZeroWhenNecessary(h);\n    m = addLeadingZeroWhenNecessary(m);\n    s = addLeadingZeroWhenNecessary(s"],[1,"branchLengthRatio;\n    \n    function branch(angle){\n      var branchX2 = x2 + branchLength * Math.cos(angle"],[0,");\n    "],[-1,"\n"],[0,"  "],[-1,"  // Assemble the text\n    var clockText = h + ':' + m + ':' + s + ' ' + ampm,"],[1,"var branchY2 = y2 + branchLength * Math.sin(angle);\n      drawTree(x2, y2, branchX2, branchY2, branchLength,\n               angle, depth - 1);"],[0,"\n    "],[1,"}\n"],[0,"    "],[-1,"x = 10,\n        y = 60;\n    \n    // This green color was picked\n    // using http://jscolor.com/"],[1,"\n    // Right branch\n    branch(branchAngle + branchAngleDifference);\n    \n    // Left branch\n    branch(branchAngle - branchAngleDifference);\n  }\n}\n\nfunction redrawTree(){"],[0,"\n  "],[1,"\n"],[0,"  c."],[-1,"fillStyle = '#00DB84';\n    \n    // Draw the text\n    c.font = '50pt Arial';\n    c.strokeStyle = 'black';\n    c.fillText(clockText"],[1,"clearRect(0,0, canvas.width, canvas.height);\n  \n  var x1 = centerX;\n  var y1 = canvas.height;\n  var x2 = centerX;\n  var y2 = canvas.height - trunkHeight;\n  drawTree(x1, y1"],[0,", x"],[1,"2"],[0,", y"],[-1,");\n    c.strokeText(clockText, x, y);\n}\n\nfunction addLeadingZeroWhenNecessary(s){\n    return (s < 10 ? '0' : '') + s;\n}\n\n// Draw the clock right away\ndrawClock();\n\n// Then draw the clock every subsequent second\nsetInterval(drawClock, 1000"],[1,"2, trunkHeight,\n           - Math.PI / 2, branchingDepth);\n}\n\ncanvas.addEventListener(\"mousemove\",function(e){\n  branchLengthRatio = e.x / 300;\n  branchAngleDifference = e.y / canvas.height * Math.PI;\n  redrawTree();\n  console.log(\"branchLengthRatio = \"+branchLengthRatio);\n  console.log(\"branchAngleDifference = \"+branchAngleDifference);\n});\n\nredrawTree("],[0,");"]],"start1":78,"start2":78,"length1":1120,"length2":1381}]],"length":1459,"saved":false}
